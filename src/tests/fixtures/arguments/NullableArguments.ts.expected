-----------------
INPUT
----------------- 
/** @gqlType */
export default class SomeType {
  /** @gqlField */
  hello1({ greeting }: { greeting?: string | null }): string {
    return "Hello world!";
  }
  /** @gqlField */
  hello2({
    greeting,
  }: {
    greeting?: string | undefined | void | undefined;
  }): string {
    return "Hello world!";
  }
}

-----------------
OUTPUT
-----------------
-- SDL --
type SomeType {
  hello1(greeting: String): String @metadata
  hello2(greeting: String): String @metadata
}
-- TypeScript --
import { GraphQLSchema, GraphQLObjectType, GraphQLString } from "graphql";
export function getSchema(): GraphQLSchema {
    const SomeTypeType: GraphQLObjectType = new GraphQLObjectType({
        name: "SomeType",
        fields() {
            return {
                hello1: {
                    name: "hello1",
                    type: GraphQLString,
                    args: {
                        greeting: {
                            name: "greeting",
                            type: GraphQLString
                        }
                    }
                },
                hello2: {
                    name: "hello2",
                    type: GraphQLString,
                    args: {
                        greeting: {
                            name: "greeting",
                            type: GraphQLString
                        }
                    }
                }
            };
        }
    });
    return new GraphQLSchema({
        types: [SomeTypeType]
    });
}
