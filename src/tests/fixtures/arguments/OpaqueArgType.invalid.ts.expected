-----------------
INPUT
----------------- 
type SomeType = any;

/** @gqlType */
export default class SomeType {
  /** @gqlField */
  hello({ greeting }: SomeType): string {
    return "Hello world!";
  }
}

-----------------
OUTPUT
-----------------
src/tests/fixtures/arguments/OpaqueArgType.invalid.ts:6:9 - error: Expected GraphQL field argument to have a name. For example: `someField: string`. Grats uses this name to determine the argument name to use in the derived GraphQL schema.

6   hello({ greeting }: SomeType): string {
          ~~~~~~~~~~~~
