-----------------
INPUT
----------------- 
/** @gqlType */
type Query = unknown;

/** @gqlField */
export function foo(_: Query): string {
  return "foo";
}

-----------------
OUTPUT
-----------------
-- SDL --
type Query {
  foo: String @metadata(exportName: "foo", tsModulePath: "grats/src/tests/fixtures/type_definitions_from_alias/QueryAsAliasOfUnknown.ts")
}
-- TypeScript --
import { foo as queryFooResolver } from "./QueryAsAliasOfUnknown";
import { GraphQLSchema, GraphQLObjectType, GraphQLString } from "graphql";
export function getSchema(): GraphQLSchema {
    const QueryType: GraphQLObjectType = new GraphQLObjectType({
        name: "Query",
        fields() {
            return {
                foo: {
                    name: "foo",
                    type: GraphQLString,
                    resolve(source) {
                        return queryFooResolver(source);
                    }
                }
            };
        }
    });
    return new GraphQLSchema({
        query: QueryType,
        types: [QueryType]
    });
}
