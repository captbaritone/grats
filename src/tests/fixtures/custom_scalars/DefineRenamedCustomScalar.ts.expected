-----------------
INPUT
----------------- 
/** @gqlType */
class SomeType {
  /** @gqlField */
  hello: string;
}

/** @gqlScalar CustomName */
export type MyUrl = string;

-----------------
OUTPUT
-----------------
-- SDL --
scalar CustomName

type SomeType {
  hello: String
}
-- TypeScript --
import { GqlScalar } from "grats";
import { MyUrl as CustomNameInternal } from "./DefineRenamedCustomScalar";
import { GraphQLSchema, GraphQLScalarType, GraphQLObjectType, GraphQLString } from "graphql";
export type SchemaConfig = {
    scalars: {
        CustomName: GqlScalar<CustomNameInternal>;
    };
};
export function getSchema(config: SchemaConfig): GraphQLSchema {
    const CustomNameType: GraphQLScalarType = new GraphQLScalarType({
        name: "CustomName",
        ...config.scalars.CustomName
    });
    const SomeTypeType: GraphQLObjectType = new GraphQLObjectType({
        name: "SomeType",
        fields() {
            return {
                hello: {
                    name: "hello",
                    type: GraphQLString
                }
            };
        }
    });
    return new GraphQLSchema({
        types: [CustomNameType, SomeTypeType]
    });
}
