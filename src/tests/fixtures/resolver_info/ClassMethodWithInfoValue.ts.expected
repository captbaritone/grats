-----------------
INPUT
----------------- 
import { GqlInfo } from "../../../Types";

/** @gqlType */
export class SomeType {
  /** @gqlField greeting */
  greetz(info: GqlInfo): string {
    return "Hello";
  }
}

-----------------
OUTPUT
-----------------
-- SDL --
type SomeType {
  greeting: String @metadata(name: "greetz")
}
-- TypeScript --
import { GraphQLSchema, GraphQLObjectType, GraphQLString } from "graphql";
export function getSchema(): GraphQLSchema {
    const SomeTypeType: GraphQLObjectType = new GraphQLObjectType({
        name: "SomeType",
        fields() {
            return {
                greeting: {
                    name: "greeting",
                    type: GraphQLString,
                    resolve(source, _args, _context, info) {
                        return source.greetz(info);
                    }
                }
            };
        }
    });
    return new GraphQLSchema({
        types: [SomeTypeType]
    });
}
