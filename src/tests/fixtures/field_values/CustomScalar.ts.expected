-----------------
INPUT
----------------- 
/** @gqlScalar */
export type MyString = string;

/** @gqlType */
export default class SomeType {
  /** @gqlField */
  hello(): MyString {
    return "Hello world!";
  }
}

-----------------
OUTPUT
-----------------
-- SDL --
scalar MyString

type SomeType {
  hello: MyString
}
-- TypeScript --
import { GqlScalar } from "grats";
import { MyString as MyStringInternal } from "./CustomScalar";
import { GraphQLSchema, GraphQLScalarType, GraphQLObjectType } from "graphql";
export type SchemaConfig = {
    scalars: {
        MyString: GqlScalar<MyStringInternal>;
    };
};
export function getSchema(config: SchemaConfig): GraphQLSchema {
    const MyStringType: GraphQLScalarType = new GraphQLScalarType({
        name: "MyString",
        ...config.scalars.MyString
    });
    const SomeTypeType: GraphQLObjectType = new GraphQLObjectType({
        name: "SomeType",
        fields() {
            return {
                hello: {
                    name: "hello",
                    type: MyStringType
                }
            };
        }
    });
    return new GraphQLSchema({
        types: [MyStringType, SomeTypeType]
    });
}
