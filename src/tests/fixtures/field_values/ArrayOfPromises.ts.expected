-----------------
INPUT
----------------- 
/** @gqlType */
export default class SomeType {
  /** @gqlField */
  b: Promise<string>[];
  /** @gqlField */
  c: Array<Promise<string>>;
}

-----------------
OUTPUT
-----------------
-- SDL --
type SomeType @exported(exportName: "SomeType", tsModulePath: "grats/src/tests/fixtures/field_values/ArrayOfPromises.ts") {
  b: [String!] @metadata
  c: [String!] @metadata
}
-- TypeScript --
import { GraphQLSchema, GraphQLObjectType, GraphQLList, GraphQLNonNull, GraphQLString } from "graphql";
export function getSchema(): GraphQLSchema {
    const SomeTypeType: GraphQLObjectType = new GraphQLObjectType({
        name: "SomeType",
        fields() {
            return {
                b: {
                    name: "b",
                    type: new GraphQLList(new GraphQLNonNull(GraphQLString))
                },
                c: {
                    name: "c",
                    type: new GraphQLList(new GraphQLNonNull(GraphQLString))
                }
            };
        }
    });
    return new GraphQLSchema({
        types: [SomeTypeType]
    });
}
