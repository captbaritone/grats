-----------------
INPUT
----------------- 
/** @gqlType */
export default class SomeType {
  /** @gqlField */
  hello(): string | void {
    return "Hello world!";
  }
  /** @gqlField */
  goodbye(): string | null {
    return "Hello world!";
  }
  /** @gqlField */
  farewell(): string | null | void | undefined {
    return "Hello world!";
  }
  /** @gqlField */
  async adieu(): Promise<string | null | void> {
    return "Hello world!";
  }
}

-----------------
OUTPUT
-----------------
-- SDL --
type SomeType {
  adieu: String @metadata
  farewell: String @metadata
  goodbye: String @metadata
  hello: String @metadata
}
-- TypeScript --
import { GraphQLSchema, GraphQLObjectType, GraphQLString } from "graphql";
export function getSchema(): GraphQLSchema {
    const SomeTypeType: GraphQLObjectType = new GraphQLObjectType({
        name: "SomeType",
        fields() {
            return {
                adieu: {
                    name: "adieu",
                    type: GraphQLString
                },
                farewell: {
                    name: "farewell",
                    type: GraphQLString
                },
                goodbye: {
                    name: "goodbye",
                    type: GraphQLString
                },
                hello: {
                    name: "hello",
                    type: GraphQLString
                }
            };
        }
    });
    return new GraphQLSchema({
        types: [SomeTypeType]
    });
}
