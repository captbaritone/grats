-----------------
INPUT
----------------- 
/** @gqlType */
class SomeType {
  /**
   * Number 1 greeting.
   *
   * @gqlField greeting
   */
  somePropertyField: string;

  /**
   * Number 1 salutation.
   *
   * @gqlField salutaion
   */
  someMethodField(): string {
    return "Hello world!";
  }
}

-----------------
OUTPUT
-----------------
-- SDL --
type SomeType {
  """Number 1 greeting."""
  greeting: String @metadata(name: "somePropertyField")
  """Number 1 salutation."""
  salutaion: String @metadata(argCount: 0, name: "someMethodField")
}
-- TypeScript --
import { GraphQLSchema, GraphQLObjectType, GraphQLString } from "graphql";
export function getSchema(): GraphQLSchema {
    const SomeTypeType: GraphQLObjectType = new GraphQLObjectType({
        name: "SomeType",
        fields() {
            return {
                greeting: {
                    description: "Number 1 greeting.",
                    name: "greeting",
                    type: GraphQLString,
                    resolve(source, args, context, info) {
                        return source.somePropertyField;
                    }
                },
                salutaion: {
                    description: "Number 1 salutation.",
                    name: "salutaion",
                    type: GraphQLString,
                    resolve(source, args, context, info) {
                        return source.someMethodField(args, context, info);
                    }
                }
            };
        }
    });
    return new GraphQLSchema({
        types: [SomeTypeType]
    });
}
