/**
 * A registered user of the system.
 * @gqlType
 */
class User {
  /**
   * A friendly greeting for the user, intended for
   * their first visit.
   * @gqlField
   */
  hello(
    /** The salutation to use */
    greeting: string,
  ): string {
    return `${greeting} World`;
  }
}

=== SNIP ===
"""A registered user of the system."""
type User {
  """
  A friendly greeting for the user, intended for
  their first visit.
  """
  hello(
    """The salutation to use"""
    greeting: String!
  ): String
}
=== SNIP ===
import { GraphQLSchema, GraphQLObjectType, GraphQLString, GraphQLNonNull } from "graphql";
export function getSchema(): GraphQLSchema {
    const UserType: GraphQLObjectType = new GraphQLObjectType({
        name: "User",
        description: "A registered user of the system.",
        fields() {
            return {
                hello: {
                    description: "A friendly greeting for the user, intended for\ntheir first visit.",
                    name: "hello",
                    type: GraphQLString,
                    args: {
                        greeting: {
                            description: "The salutation to use",
                            name: "greeting",
                            type: new GraphQLNonNull(GraphQLString)
                        }
                    },
                    resolve(source, args) {
                        return source.hello(args.greeting);
                    }
                }
            };
        }
    });
    return new GraphQLSchema({
        types: [UserType]
    });
}
