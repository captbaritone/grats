/**
 * A user in our kick-ass system!
 * @gqlType */
type User = {
  /** @gqlField */
  name: string;
};

/** @gqlField */
export function greet(user: User, greeting: string): string {
  return `${greeting}, ${user.name}`;
}

=== SNIP ===
"""A user in our kick-ass system!"""
type User {
  greet(greeting: String!): String
  name: String
}
=== SNIP ===
import { greet as userGreetResolver } from "./homepageExampleFP.grats";
import { GraphQLSchema, GraphQLObjectType, GraphQLString, GraphQLNonNull } from "graphql";
export function getSchema(): GraphQLSchema {
    const UserType: GraphQLObjectType = new GraphQLObjectType({
        name: "User",
        description: "A user in our kick-ass system!",
        fields() {
            return {
                greet: {
                    name: "greet",
                    type: GraphQLString,
                    args: {
                        greeting: {
                            name: "greeting",
                            type: new GraphQLNonNull(GraphQLString)
                        }
                    },
                    resolve(source, args) {
                        return userGreetResolver(source, args.greeting);
                    }
                },
                name: {
                    name: "name",
                    type: GraphQLString
                }
            };
        }
    });
    return new GraphQLSchema({
        types: [UserType]
    });
}
